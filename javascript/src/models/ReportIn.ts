/* tslint:disable */
/* eslint-disable */
/**
 * Autoenhance API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReportIn
 */
export interface ReportIn {
    /**
     * 
     * @type {Array<string>}
     * @memberof ReportIn
     */
    category: Array<ReportInCategoryEnum>;
    /**
     * 
     * @type {string}
     * @memberof ReportIn
     */
    comment?: string;
}


/**
 * @export
 */
export const ReportInCategoryEnum = {
    Download: 'download',
    Hdr: 'hdr',
    LensCorrection: 'lens_correction',
    PerspectiveCorrection: 'perspective_correction',
    Processing: 'processing',
    ImageQuality: 'image_quality',
    Other: 'other',
    SkyReplacement: 'sky_replacement',
    Contrast: 'contrast',
    Colour: 'colour',
    WhiteBalance: 'white_balance'
} as const;
export type ReportInCategoryEnum = typeof ReportInCategoryEnum[keyof typeof ReportInCategoryEnum];


/**
 * Check if a given object implements the ReportIn interface.
 */
export function instanceOfReportIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "category" in value;

    return isInstance;
}

export function ReportInFromJSON(json: any): ReportIn {
    return ReportInFromJSONTyped(json, false);
}

export function ReportInFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'category': json['category'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
    };
}

export function ReportInToJSON(value?: ReportIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'category': value.category,
        'comment': value.comment,
    };
}

