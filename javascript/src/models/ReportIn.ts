/* tslint:disable */
/* eslint-disable */
/**
 * Autoenhance API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReportIn
 */
export interface ReportIn {
    /**
     * A list of categories to be reported.
     * @type {Array<string>}
     * @memberof ReportIn
     */
    category: Array<ReportInCategoryEnum>;
    /**
     * A comment to be sent along with the report.
     * @type {string}
     * @memberof ReportIn
     */
    comment: string;
}


/**
 * @export
 */
export const ReportInCategoryEnum = {
    Download: 'DOWNLOAD',
    Hdr: 'HDR',
    LensCorrection: 'LENS_CORRECTION',
    PerspectiveCorrection: 'PERSPECTIVE_CORRECTION',
    Processing: 'PROCESSING',
    ImageQuality: 'IMAGE_QUALITY',
    Other: 'OTHER',
    SkyReplacement: 'SKY_REPLACEMENT',
    Contrast: 'CONTRAST',
    Colour: 'COLOUR',
    WhiteBalance: 'WHITE_BALANCE'
} as const;
export type ReportInCategoryEnum = typeof ReportInCategoryEnum[keyof typeof ReportInCategoryEnum];


/**
 * Check if a given object implements the ReportIn interface.
 */
export function instanceOfReportIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "comment" in value;

    return isInstance;
}

export function ReportInFromJSON(json: any): ReportIn {
    return ReportInFromJSONTyped(json, false);
}

export function ReportInFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'category': json['category'],
        'comment': json['comment'],
    };
}

export function ReportInToJSON(value?: ReportIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'category': value.category,
        'comment': value.comment,
    };
}

