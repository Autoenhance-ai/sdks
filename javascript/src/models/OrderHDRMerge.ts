/* tslint:disable */
/* eslint-disable */
/**
 * Autoenhance API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderHDRMerge
 */
export interface OrderHDRMerge {
    /**
     * The version of the AI to use.
     * @type {number}
     * @memberof OrderHDRMerge
     */
    aiVersion?: OrderHDRMergeAiVersionEnum;
    /**
     * Enable the replacement of the original sky for a summer sky.
     * @type {boolean}
     * @memberof OrderHDRMerge
     */
    skyReplacement?: boolean;
    /**
     * Correct any vertical distortion in the image so that it appears straight.
     * @type {boolean}
     * @memberof OrderHDRMerge
     */
    verticalCorrection?: boolean;
    /**
     * Correct any lens distortion in the image.
     * @type {boolean}
     * @memberof OrderHDRMerge
     */
    lensCorrection?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrderHDRMerge
     */
    vibrant?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrderHDRMerge
     */
    enhanceType?: OrderHDRMergeEnhanceTypeEnum;
    /**
     * The amount of contrast boost to apply to the image. Options include: NONE, LOW, MEDIUM, HIGH
     * @type {string}
     * @memberof OrderHDRMerge
     */
    contrastBoost?: OrderHDRMergeContrastBoostEnum;
    /**
     * The amount of brightness boost to apply to the image. Options include: NONE, LOW, MEDIUM, HIGH
     * @type {string}
     * @memberof OrderHDRMerge
     */
    brightnessBoost?: OrderHDRMergeBrightnessBoostEnum;
    /**
     * The amount of saturation to apply to the image. Options include: NONE, LOW, MEDIUM, HIGH
     * @type {string}
     * @memberof OrderHDRMerge
     */
    saturationLevel?: OrderHDRMergeSaturationLevelEnum;
    /**
     * The amount of sharpening to apply to the image. Options include: NONE, LOW, MEDIUM, HIGH
     * @type {string}
     * @memberof OrderHDRMerge
     */
    sharpenLevel?: OrderHDRMergeSharpenLevelEnum;
    /**
     * The amount of denoising to apply to the image. Options include: NONE, LOW, MEDIUM, HIGH
     * @type {string}
     * @memberof OrderHDRMerge
     */
    denoiseLevel?: OrderHDRMergeDenoiseLevelEnum;
    /**
     * The amount of clarity to apply to the image. Options include: NONE, LOW, MEDIUM, HIGH
     * @type {string}
     * @memberof OrderHDRMerge
     */
    clarityLevel?: OrderHDRMergeClarityLevelEnum;
    /**
     * Whether to blur any faces or license plates in the image.
     * @type {boolean}
     * @memberof OrderHDRMerge
     */
    privacy?: boolean;
    /**
     * The type of sky to replace the original sky with. Options include: UK_SUMMER, UK_WINTER, USA_SUMMER
     * @type {string}
     * @memberof OrderHDRMerge
     */
    skyType?: OrderHDRMergeSkyTypeEnum;
    /**
     * The type of clouds in the new sky to replace the original sky with. Options include: CLEAR, LOW_CLOUD, LOW_CLOUD_LOW_SAT, HIGH_CLOUD, EHOUSE
     * @type {string}
     * @memberof OrderHDRMerge
     */
    cloudType?: OrderHDRMergeCloudTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderHDRMerge
     */
    contrastBoostInternal?: OrderHDRMergeContrastBoostInternalEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderHDRMerge
     */
    contrastBoostExternal?: OrderHDRMergeContrastBoostExternalEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderHDRMerge
     */
    brightnessBoostInternal?: OrderHDRMergeBrightnessBoostInternalEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderHDRMerge
     */
    brightnessBoostExternal?: OrderHDRMergeBrightnessBoostExternalEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderHDRMerge
     */
    saturationBoostLevel?: OrderHDRMergeSaturationBoostLevelEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderHDRMerge
     */
    skySaturationLevel?: OrderHDRMergeSkySaturationLevelEnum;
}


/**
 * @export
 */
export const OrderHDRMergeAiVersionEnum = {
    NUMBER_1_DOT_0: 1.0,
    NUMBER_1_DOT_1: 1.1,
    NUMBER_3_DOT_0: 3.0,
    NUMBER_3_DOT_1: 3.1,
    NUMBER_4_DOT_0: 4.0
} as const;
export type OrderHDRMergeAiVersionEnum = typeof OrderHDRMergeAiVersionEnum[keyof typeof OrderHDRMergeAiVersionEnum];

/**
 * @export
 */
export const OrderHDRMergeEnhanceTypeEnum = {
    Property: 'property',
    PropertyUsa: 'property_usa'
} as const;
export type OrderHDRMergeEnhanceTypeEnum = typeof OrderHDRMergeEnhanceTypeEnum[keyof typeof OrderHDRMergeEnhanceTypeEnum];

/**
 * @export
 */
export const OrderHDRMergeContrastBoostEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeContrastBoostEnum = typeof OrderHDRMergeContrastBoostEnum[keyof typeof OrderHDRMergeContrastBoostEnum];

/**
 * @export
 */
export const OrderHDRMergeBrightnessBoostEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeBrightnessBoostEnum = typeof OrderHDRMergeBrightnessBoostEnum[keyof typeof OrderHDRMergeBrightnessBoostEnum];

/**
 * @export
 */
export const OrderHDRMergeSaturationLevelEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeSaturationLevelEnum = typeof OrderHDRMergeSaturationLevelEnum[keyof typeof OrderHDRMergeSaturationLevelEnum];

/**
 * @export
 */
export const OrderHDRMergeSharpenLevelEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeSharpenLevelEnum = typeof OrderHDRMergeSharpenLevelEnum[keyof typeof OrderHDRMergeSharpenLevelEnum];

/**
 * @export
 */
export const OrderHDRMergeDenoiseLevelEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeDenoiseLevelEnum = typeof OrderHDRMergeDenoiseLevelEnum[keyof typeof OrderHDRMergeDenoiseLevelEnum];

/**
 * @export
 */
export const OrderHDRMergeClarityLevelEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeClarityLevelEnum = typeof OrderHDRMergeClarityLevelEnum[keyof typeof OrderHDRMergeClarityLevelEnum];

/**
 * @export
 */
export const OrderHDRMergeSkyTypeEnum = {
    UkSummer: 'UK_SUMMER',
    UkWinter: 'UK_WINTER',
    UsaSummer: 'USA_SUMMER'
} as const;
export type OrderHDRMergeSkyTypeEnum = typeof OrderHDRMergeSkyTypeEnum[keyof typeof OrderHDRMergeSkyTypeEnum];

/**
 * @export
 */
export const OrderHDRMergeCloudTypeEnum = {
    Clear: 'CLEAR',
    LowCloud: 'LOW_CLOUD',
    LowCloudLowSat: 'LOW_CLOUD_LOW_SAT',
    HighCloud: 'HIGH_CLOUD',
    Ehouse: 'EHOUSE'
} as const;
export type OrderHDRMergeCloudTypeEnum = typeof OrderHDRMergeCloudTypeEnum[keyof typeof OrderHDRMergeCloudTypeEnum];

/**
 * @export
 */
export const OrderHDRMergeContrastBoostInternalEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeContrastBoostInternalEnum = typeof OrderHDRMergeContrastBoostInternalEnum[keyof typeof OrderHDRMergeContrastBoostInternalEnum];

/**
 * @export
 */
export const OrderHDRMergeContrastBoostExternalEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeContrastBoostExternalEnum = typeof OrderHDRMergeContrastBoostExternalEnum[keyof typeof OrderHDRMergeContrastBoostExternalEnum];

/**
 * @export
 */
export const OrderHDRMergeBrightnessBoostInternalEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeBrightnessBoostInternalEnum = typeof OrderHDRMergeBrightnessBoostInternalEnum[keyof typeof OrderHDRMergeBrightnessBoostInternalEnum];

/**
 * @export
 */
export const OrderHDRMergeBrightnessBoostExternalEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeBrightnessBoostExternalEnum = typeof OrderHDRMergeBrightnessBoostExternalEnum[keyof typeof OrderHDRMergeBrightnessBoostExternalEnum];

/**
 * @export
 */
export const OrderHDRMergeSaturationBoostLevelEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeSaturationBoostLevelEnum = typeof OrderHDRMergeSaturationBoostLevelEnum[keyof typeof OrderHDRMergeSaturationBoostLevelEnum];

/**
 * @export
 */
export const OrderHDRMergeSkySaturationLevelEnum = {
    None: 'NONE',
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;
export type OrderHDRMergeSkySaturationLevelEnum = typeof OrderHDRMergeSkySaturationLevelEnum[keyof typeof OrderHDRMergeSkySaturationLevelEnum];


/**
 * Check if a given object implements the OrderHDRMerge interface.
 */
export function instanceOfOrderHDRMerge(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderHDRMergeFromJSON(json: any): OrderHDRMerge {
    return OrderHDRMergeFromJSONTyped(json, false);
}

export function OrderHDRMergeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderHDRMerge {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aiVersion': !exists(json, 'ai_version') ? undefined : json['ai_version'],
        'skyReplacement': !exists(json, 'sky_replacement') ? undefined : json['sky_replacement'],
        'verticalCorrection': !exists(json, 'vertical_correction') ? undefined : json['vertical_correction'],
        'lensCorrection': !exists(json, 'lens_correction') ? undefined : json['lens_correction'],
        'vibrant': !exists(json, 'vibrant') ? undefined : json['vibrant'],
        'enhanceType': !exists(json, 'enhance_type') ? undefined : json['enhance_type'],
        'contrastBoost': !exists(json, 'contrast_boost') ? undefined : json['contrast_boost'],
        'brightnessBoost': !exists(json, 'brightness_boost') ? undefined : json['brightness_boost'],
        'saturationLevel': !exists(json, 'saturation_level') ? undefined : json['saturation_level'],
        'sharpenLevel': !exists(json, 'sharpen_level') ? undefined : json['sharpen_level'],
        'denoiseLevel': !exists(json, 'denoise_level') ? undefined : json['denoise_level'],
        'clarityLevel': !exists(json, 'clarity_level') ? undefined : json['clarity_level'],
        'privacy': !exists(json, 'privacy') ? undefined : json['privacy'],
        'skyType': !exists(json, 'sky_type') ? undefined : json['sky_type'],
        'cloudType': !exists(json, 'cloud_type') ? undefined : json['cloud_type'],
        'contrastBoostInternal': !exists(json, 'contrast_boost_internal') ? undefined : json['contrast_boost_internal'],
        'contrastBoostExternal': !exists(json, 'contrast_boost_external') ? undefined : json['contrast_boost_external'],
        'brightnessBoostInternal': !exists(json, 'brightness_boost_internal') ? undefined : json['brightness_boost_internal'],
        'brightnessBoostExternal': !exists(json, 'brightness_boost_external') ? undefined : json['brightness_boost_external'],
        'saturationBoostLevel': !exists(json, 'saturation_boost_level') ? undefined : json['saturation_boost_level'],
        'skySaturationLevel': !exists(json, 'sky_saturation_level') ? undefined : json['sky_saturation_level'],
    };
}

export function OrderHDRMergeToJSON(value?: OrderHDRMerge | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ai_version': value.aiVersion,
        'sky_replacement': value.skyReplacement,
        'vertical_correction': value.verticalCorrection,
        'lens_correction': value.lensCorrection,
        'vibrant': value.vibrant,
        'enhance_type': value.enhanceType,
        'contrast_boost': value.contrastBoost,
        'brightness_boost': value.brightnessBoost,
        'saturation_level': value.saturationLevel,
        'sharpen_level': value.sharpenLevel,
        'denoise_level': value.denoiseLevel,
        'clarity_level': value.clarityLevel,
        'privacy': value.privacy,
        'sky_type': value.skyType,
        'cloud_type': value.cloudType,
        'contrast_boost_internal': value.contrastBoostInternal,
        'contrast_boost_external': value.contrastBoostExternal,
        'brightness_boost_internal': value.brightnessBoostInternal,
        'brightness_boost_external': value.brightnessBoostExternal,
        'saturation_boost_level': value.saturationBoostLevel,
        'sky_saturation_level': value.skySaturationLevel,
    };
}

