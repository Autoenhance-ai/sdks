/* tslint:disable */
/* eslint-disable */
/**
 * Autoenhance API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BracketOut
 */
export interface BracketOut {
    /**
     * 
     * @type {boolean}
     * @memberof BracketOut
     */
    isUploaded?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BracketOut
     */
    name?: string;
}

/**
 * Check if a given object implements the BracketOut interface.
 */
export function instanceOfBracketOut(value: object): value is BracketOut {
    return true;
}

export function BracketOutFromJSON(json: any): BracketOut {
    return BracketOutFromJSONTyped(json, false);
}

export function BracketOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): BracketOut {
    if (json == null) {
        return json;
    }
    return {
        
        'isUploaded': json['is_uploaded'] == null ? undefined : json['is_uploaded'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function BracketOutToJSON(json: any): BracketOut {
    return BracketOutToJSONTyped(json, false);
}

export function BracketOutToJSONTyped(value?: BracketOut | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'is_uploaded': value['isUploaded'],
        'name': value['name'],
    };
}

