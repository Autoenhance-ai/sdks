/* tslint:disable */
/* eslint-disable */
/**
 * Autoenhance API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Pagination
 */
export interface Pagination {
    /**
     * The amount of items per page of results.
     * @type {number}
     * @memberof Pagination
     */
    perPage?: number;
    /**
     * The offset token for the next page of results or null if it is the last page. Pass this to the `offset` parameter when loading the next page.
     * @type {string}
     * @memberof Pagination
     */
    nextOffset?: string;
}

/**
 * Check if a given object implements the Pagination interface.
 */
export function instanceOfPagination(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PaginationFromJSON(json: any): Pagination {
    return PaginationFromJSONTyped(json, false);
}

export function PaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pagination {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'perPage': !exists(json, 'per_page') ? undefined : json['per_page'],
        'nextOffset': !exists(json, 'next_offset') ? undefined : json['next_offset'],
    };
}

export function PaginationToJSON(value?: Pagination | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'per_page': value.perPage,
        'next_offset': value.nextOffset,
    };
}

